var e={id:"operation-calculateScores",handler:async({keys:e,measureIds:t},{env:a,logger:r,accountability:n,services:o,getSchema:i})=>{try{const{ItemsService:a}=o,r=await i();let s=100,c=95;n.admin=!0;const u=new a("ratings_measures",{schema:r,accountability:n}),d=new a("measures",{schema:r,accountability:n}),l=new a("municipalities",{schema:r,accountability:n});let m={limit:-1};const f=await d.readByQuery(m);let h,_;if(_=null==t?[]:t,0===_.length){h=await u.readMany(e,m);const t=Object.values(h).map((e=>e.localteam_id));if(0===t.length)return;m={filter:{localteam_id:{_in:t}}}}const p=await l.readByQuery(m);for(const e of p){const t={};0===_.length?h.forEach((a=>{if(a.localteam_id===e.localteam_id){const e=f.find((e=>e.id===a.measure_id));void 0!==e&&(t[e.sector]={denominator:0,numerator:0})}})):f.forEach((function(e){_.includes(e.id)&&(t[e.sector]={denominator:0,numerator:0})})),t.total={denominator:0,numerator:0},t.numberOfRated={denominator:0,numerator:0},m={filter:{_and:[{localteam_id:{_eq:e.localteam_id}}]}};let a=(await u.readByQuery(m)).map((e=>{const t=f.find((t=>t.id===e.measure_id));return null!=t.weight&&null!=t.sector&&null!=t.status?(e.weight=t.weight,e.sector=t.sector,e.measureStatus=t.status):(e.weight=0,e.sector="total",e.measureStatus="draft"),e}));for(const e of a){const{measure_id:a,applicable:r,weight:n,approved:o,status:i,rating:s,sector:c,measureStatus:u}=e;r&&"published"===u&&!_.includes(a)&&(t.total.denominator+=n,t.numberOfRated.denominator+=1,t[c]&&(t[c].denominator+=n),o&&"published"===i&&(t.total.numerator+=Number(s)*n,t.numberOfRated.numerator+=1,t[c]&&(t[c].numerator+=Number(s)*n)))}let r={};for(const e in t)t.hasOwnProperty(e)&&(t[e].denominator>0?"numberOfRated"===e?r.percantage_rated=t[e].numerator/t[e].denominator*s:r["score_"+e]=t[e].numerator/t[e].denominator*s:"numberOfRated"===e?r.percantage_rated=0:r["score_"+e]=0);r.percantage_rated>=c?r.status="published":r.status="draft";await l.updateOne(e.id,r)}}catch(e){throw r.error(e),e}return{}}};export{e as default};
